@Library('my-shared-library') _

pipeline {

    agent any

        parameters{

        //     choice(name = 'action', choices='create\ndelete', description='create or destroy')
               string(name: 'Iaws_account_id', description: 'AWS ACCOUNT ID', defaultValue: '402213359600')
               string(name :'region', description :'aws region ', defaultValue :'us-east-1')
               string(name :'ecr_repo_name', description : 'ECR repository name', defaultValue :'nagamani.n')

        }
         
        stages {

            stage('Git Checkout'){

            //when {expression {params.action == 'create'}}

                steps{

                        GitCheckout(
                            branch : "main",
                            url : "https://github.com/nagamanigowda/jenkins_repo.git"
                        )
                }
            }

            //stage('Unit Test maven'){

            //when {expression {params.action == 'create'}}

              //  steps{

                //    script{

                 //       mvnTest()

                   // }

                //}
            //}
        
        //stage('Integration Test maven'){
               
        //when {expression {params.action == 'create'}}
                           
          //      steps{

            //        script{

              //          mvnIntegrationTest()
                        
                //    }

               // }
            //}

        //stage('static code analysis:sonarqube'){
               
        //when {expression {params.action == 'create'}}
                           
                // steps{

                //     script{
                        
                    //     def sonarqubecredentialId = 'my-sonar'
                    //     staticCodeAnalysis(sonarqubecredentialId)
                        
                    // }

        //        }
          //  } 

        //stage('Quality Gate Status:sonarqube'){
               
        //when {expression {params.action == 'create'}}
                           
            //     steps{

            //         script{
                        
            //             def sonarqubecredentialId = 'my-sonar'
            //             QualityGateStatus(sonarqubecredentialId)
                        
            //         }

            //     }
            // }
        stage('Maven Build: maven'){

            //when {expression {params.action == 'create'}}

                steps{

                    script{

                        mvnBuild()

                    }

                }
            }
        stage('Docker Image Build: ECR'){

            //when {expression {params.action == 'create'}}

                steps{

                    script{

                        DockerBuild("${params.aws_account_id}", "${params.region}", "${params.ecr_repo_name}")

                    }

                }
        }    